{"version":3,"sources":["components/eye.tsx","components/body.tsx","components/counter.tsx","assets/pan.svg","assets/ladle-wooden.svg","components/banger.tsx","App.tsx","index.tsx"],"names":["EyeLateralities","Object","freeze","LEFT","RIGHT","Eye","props","irisSpringTransform","xy","interpolate","x","y","className","laterality","div","style","transform","Body","Counter","value","toLocaleString","href","target","Banger","src","Pan","img","Ladle","rxy","BangSoundEffect","Audio","App","useState","Math","floor","Date","getTime","counter","setCounter","useSpring","eyeSpring","setEyeSpring","ladleSpring","from","to","config","duration","onMouseMove","e","offsetX","clientX","window","innerWidth","offsetY","clientY","innerHeight","onClick","pause","currentTime","play","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAKaA,EAAkBC,OAAOC,OAAO,CAC3CC,KAAM,OACNC,MAAO,UAmBMC,EAhBiB,SAAAC,GAC9B,IAAMC,EACJD,EAAME,GAAGC,aAAY,SAACC,EAAWC,GAC/B,MAAM,eAAN,OAAsBD,EAAtB,eAA8BC,EAA9B,aAGJ,OACE,sBAAKC,UAAS,cAASN,EAAMO,YAA7B,UACE,cAAC,IAASC,IAAV,CACEF,UAAU,OACVG,MAAO,CAACC,UAAWT,KACrB,qBAAKK,UAAU,mBCVNK,G,MARF,WACX,OACE,qBAAKL,UAAU,iBAAf,SACE,qBAAKA,UAAU,aCkBNM,G,MApByB,SAAAZ,GAAU,IAAD,EAC/C,OACE,sBAAKM,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,mBACGN,EAAMa,aADT,aACG,EAAaC,mBAEhB,sBAAKR,UAAU,eAAf,sBAAuC,uBAAvC,eACA,sBAAKA,UAAU,cAAf,8BAEE,mBACES,KAAK,kDACLC,OAAO,SACPV,UAAU,WAHZ,sCCbO,MAA0B,gCCA1B,MAA0B,yCCuB1BW,G,MAhBuB,SAAAjB,GACpC,OACE,qBAAKM,UAAU,SAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAMY,IAAKC,IAC1B,cAAC,IAASC,IAAV,CACEd,UAAU,QACVY,IAAKG,EACLZ,MAAOT,EAAMsB,eCRnBC,G,MAAkB,IAAIC,MAAM,qBA4DnBC,EA1DH,WAAM,MAEcC,mBAASC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,MAFzD,mBAETC,EAFS,KAEAC,EAFA,OAIkBC,aAAU,iBAAO,CACjD/B,GAAI,CAAC,EAAG,OALM,mBAITgC,EAJS,KAIEC,EAJF,KAUVC,EAAcH,YAAU,CAC5BI,KAAM,CAAC3B,UAAW,2CAClB4B,GAAI,CACF,CAAC5B,UAAW,2CACZ,CAACA,UAAW,4CAEd6B,OAAQ,CAACC,SAAU,OAoBrB,OACE,sBAAKlC,UAAU,MAAMmC,YAlBH,SAACC,GAEnB,IAEMC,EAFY,IAEYD,EAAEE,QAAUC,OAAOC,WAAc,IACzDC,EAFa,IAEYL,EAAEM,QAAUH,OAAOI,YAAe,IACjEd,EAAa,CAACjC,GAAI,CAACyC,EAASI,MAYmBG,QATjC,WAEdlB,EAAWD,EAAU,GACrBR,EAAgB4B,QAChB5B,EAAgB6B,YAAc,EAC9B7B,EAAgB8B,QAIhB,UACE,qBAAK/C,UAAU,mBACf,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CACEC,WAAYb,EAAgBG,KAC5BK,GAAIgC,EAAUhC,KAChB,cAAC,EAAD,CACEK,WAAYb,EAAgBI,MAC5BI,GAAIgC,EAAUhC,QAElB,cAAC,EAAD,SAGJ,cAAC,EAAD,CAAQoB,IAAKc,IACb,cAAC,EAAD,CAASvB,MAAOkB,QC1DtBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4074ff66.chunk.js","sourcesContent":["import React from 'react';\nimport {animated} from 'react-spring';\nimport {EyeProps} from './eye.types';\nimport './eye.css';\n\nexport const EyeLateralities = Object.freeze({\n  LEFT: 'left',\n  RIGHT: 'right'\n});\n\nconst Eye: React.FC<EyeProps> = props => {\n  const irisSpringTransform =\n    props.xy.interpolate((x: number, y: number) => {\n      return `translate3d(${x}px, ${y}px, 0)`;\n    });\n\n  return (\n    <div className={`eye ${props.laterality}`}>\n      <animated.div\n        className='iris'\n        style={{transform: irisSpringTransform}}/>\n      <div className='reflection'></div>\n    </div>\n  );\n};\n\nexport default Eye;\n","import React from 'react';\nimport './body.css';\n\nconst Body = () => {\n  return (\n    <div className='body-container'>\n      <div className='body'></div>\n    </div>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport {CounterProps} from './counter.types';\nimport './counter.css';\n\nconst Counter: React.FC<CounterProps> = props => {\n  return (\n    <div className='counter-container'>\n      <div className='counter-numbers'>\n        {props.value?.toLocaleString()}\n      </div>\n      <div className='counter-text'>Bang for <br/>democracy</div>\n      <div className='counter-ref'>\n        Brought to you by\n        <a\n          href='https://www.facebook.com/groups/burmeselinkedin'\n          target='_blank'\n          className='ref-link'>\n          Burmese Linkedin\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n","export default __webpack_public_path__ + \"static/media/pan.81053975.svg\";","export default __webpack_public_path__ + \"static/media/ladle-wooden.8661c88a.svg\";","import React from 'react';\nimport {animated} from 'react-spring';\nimport Pan from '../assets/pan.svg';\nimport Ladle from '../assets/ladle-wooden.svg';\nimport {BangerProps} from './banger.types';\nimport './banger.css';\n\nconst Banger: React.FC<BangerProps> = props => {\n  return (\n    <div className='banger'>\n      <div className='banger-inner-wrapper'>\n        <div className='banger-inner'>\n          <img className='pan' src={Pan}/>\n          <animated.img\n            className='ladle'\n            src={Ladle}\n            style={props.rxy}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banger;\n","import React, {useState} from 'react';\nimport {useSpring} from 'react-spring';\nimport Eye, {EyeLateralities} from './components/eye';\nimport Body from './components/body';\nimport Counter from './components/counter';\nimport Banger from './components/banger';\nimport './App.css';\n\nconst BangSoundEffect = new Audio('/pot-and-pan.ogg');\n\nconst App = () => {\n  // TODO: we don't have backend now and probably never will :)\n  const [counter, setCounter] = useState(Math.floor(new Date().getTime() / 10000000));\n\n  const [eyeSpring, setEyeSpring] = useSpring(() => ({\n    xy: [0, 0]  // [x, y]\n  }));\n\n  // @ts-ignore: typescript does not work well here with useSpring's\n  // to and from so // ignore type checking here\n  const ladleSpring = useSpring({\n    from: {transform: 'rotate(140deg) translate3d(0, -60px, 0)'},\n    to: [\n      {transform: 'rotate(172deg) translate3d(0, -60px, 0)'},\n      {transform: 'rotate(140deg) translate3d(0, -60px, 0)'}\n    ],\n    config: {duration: 250}\n  });\n\n  const onMouseMove = (e: React.MouseEvent) => {\n    // animate eye movements\n    const irisWidth = 20;\n    const irisHeight = 16;\n    const offsetX = irisWidth * ((e.clientX / window.innerWidth) - 0.5);\n    const offsetY = irisHeight * ((e.clientY / window.innerHeight) - 0.5);\n    setEyeSpring({xy: [offsetX, offsetY]});\n  };\n\n  const onClick = () => {\n    // update counter and start bang animation\n    setCounter(counter + 1);\n    BangSoundEffect.pause();\n    BangSoundEffect.currentTime = 0;\n    BangSoundEffect.play();\n  };\n\n  return (\n    <div className='App' onMouseMove={onMouseMove} onClick={onClick}>\n      <div className='app-background'/>\n      <div className='min-aung-hlaing'>\n        <div className='min-aung-hlaing-inner'>\n          <div className='eyes'>\n            <Eye\n              laterality={EyeLateralities.LEFT}\n              xy={eyeSpring.xy}/>\n            <Eye\n              laterality={EyeLateralities.RIGHT}\n              xy={eyeSpring.xy}/>\n          </div>\n          <Body/>\n        </div>\n      </div>\n      <Banger rxy={ladleSpring}/>\n      <Counter value={counter}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}